riot.tag("select-box",'<div class="r-select" onclick="{ clicked }">{ placeholder }</div> <ul class="r-select-body" hide="{ hide }"> <li each="{ data }" index="{ index }" value="{ value }" class="r-select-item { selected }" onclick="{ parent.clickItem }">{ innerText }</li> </ul> <div style="display:none" class="inputHide"></div>',function(e){var t=this,a=t.root;t.config=t.opts.opts||t.opts,t.data=[],t.placeholder=t.config.placeholder,t.callback=t.config.callback,t.name=t.config.name,t.value=[],t.prevNode=null,a.getValue=function(){return t.value},t.hide=!0,this.clicked=function(e){t.hide=!1,t.update()}.bind(this),this.updateValue=function(e){for(var a=0;a<t.data.length;a++)t.data[a].selected&&(t.value.push(t.data[a].value),t.placeholder.push(t.data[a].innerText));t.value.length==t.size&&(t.hide=!0),t.placeholder=t.placeholder.join(","),t.prevNode=e,t.callback&&t.callback(t),t.update()}.bind(this),this.clickItem=function(e){var a=e.target||e.srcElement,l=+a.getAttribute("index");return t.value.length=0,t.placeholder=[],t.mutiple?(t.data[l].selected=t.data[l].selected?"":"selected",void t.updateValue(null)):(t.prevNode&&(t.data[+t.prevNode.getAttribute("index")].selected=""),t.data[l].selected="selected",void t.updateValue(a))}.bind(this),t.one("mount",function(){for(var e=0;e<t.config.data.length;e++){var a=t.config.data[e];a.selected="",a.index=e,t.data.push(a)}t.mutiple=t.config.mutiple||!1,t.size=t.mutiple?t.config.size?t.config.size:t.data.length:1,t.update()})});