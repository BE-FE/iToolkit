riot.tag("table-view",'<yield> <table class="{ config.class }"> <tr show="{ showHeader }"> <th each="{ cols }" riot-style="{ style }" hide="{ hide }">{ alias || name }</th> </tr> <tr each="{ row in rows }" > <td each="{ colkey, colval in parent.cols }" class="{ newline: parent.parent.config.newline, cut: parent.parent.config.cut }" title="{ parent.row[colkey.name] }" hide="{ colkey.hide }"> { parent.parent.drawcell(parent.row, this, colkey) } </td> </tr> </table>',function(e){var t=this,r=t.root;t.config=t.opts.opts||t.opts,t.showHeader=t.config.showHeader===!1?!1:!0,t.cols=[],t.rows=[],t.on("mount",function(){if(t.rows=t.config.data,r.children.length>1)for(i=0;i<r.children.length;i++){var e=r.children[i];if("rcol"===e.localName){var a="";void 0!=e.attributes.width&&(a="width: "+e.attributes.width.value);var o={inner:e.innerHTML,style:a,index:i,attrs:e.attributes,hide:!1};o.name=e.attributes.name?e.attributes.name.value:"",e.attributes.alias&&(o.alias=e.attributes.alias.value||""),t.cols.push(o)}}else for(i in t.rows[0]){var o={name:i,inner:"",style:a};t.cols.push(o)}t.update()}),t.compare=function(e,r){return e[t.orderkeyName]>r[t.orderkeyName]?1:e[t.orderkeyName]===r[t.orderkeyName]?0:-1},t.clearOrder=function(){t.ordered=!1,t.reversed=!1},r.loadData=function(e){t.clearOrder(),t.rows=e,t.update()},r.appendData=function(e){t.clearOrder(),t.rows.push(e),t.update()},r.clearData=function(e){t.clearOrder(),t.rows=[],t.update()},r.orderData=function(e){t.orderkeyName=e,t.ordered!==e&&(t.rows=t.reversed!==e?t.rows.sort(t.compare):t.rows.reverse(),t.ordered=e,t.reversed=!1,t.update())},r.reverseData=function(e){t.orderkeyName=e,t.reversed!==e&&(t.ordered!==e&&(t.rows=t.rows.sort(t.compare)),t.rows=t.rows.reverse(),t.ordered=!1,t.reversed=e,t.update())},r.deleteData=function(e,a){t.clearOrder();var e=e||"id";for(i=0;i<t.rows.length;i++)t.rows[i][e]===a&&(t.rows.splice(i,1),r.deleteData(e,a));return t.update(),r},r.hide=function(e){for(i=0;i<t.cols.length;i++)if(t.cols[i].name===e){t.cols[i].hide=!0;break}t.update()},r.show=function(e){for(i=0;i<t.cols.length;i++)if(t.cols[i].name===e){t.cols[i].hide=!1;break}t.update()},t.findNodes=function(e,r){for(var i=0;i<e.attributes.length;i++){var a=e.attributes[i].name,o=e.attributes[i].value;if("if"===a||"show"===a||"hide"===a){e.removeAttribute(a);var n=riot.util.tmpl(o,r);"hide"==a&&(n=!n),e.style.display=n?"":"none"}if("each"===a){e.removeAttribute(a);var s=riot.util.tmpl(o,r),l=e.parentNode;if(s&&utils.isArray(s)){var d=document.createComment("riot placeholder"),c=document.createDocumentFragment();for(l.insertBefore(d,e),i=0;i<s.length;i++){var u=document.createElement("tmp");u.innerHTML=riot.util.tmpl(e.outerHTML,s[i]),c.appendChild(u.firstChild)}l.removeChild(e),l.insertBefore(c,d)}}}if(e.hasChildNodes())for(var f=e.children,i=0;i<f.length;i++){var h=f.item(i);t.findNodes(h,r)}},this.drawcell=function(e,r,a){if(a.attrs.length)for(i in a.attrs)"function"!=typeof a.attrs[i]&&(a.attrs[i].name&&"class"!==a.attrs[i].name?r.root.setAttribute(a.attrs[i].name,a.attrs[i].value):a.attrs[i].name&&"class"==a.attrs[i].name&&utils.addClass(r.root,a.attrs[i].value));if(!a.inner)return e[a.name];var o=a.inner.replace(/&lt;%=/g,"{").replace(/%&gt;/g,"}").replace(/%>/g,"}").replace(/<%=/g,"{");for(i in iToolkit.tableExtend)e[i]="function"==typeof iToolkit.tableExtend[i]?iToolkit.tableExtend[i].bind(e):iToolkit.tableExtend[i];for(i in e)r[i]=e[i];r.root.innerHTML=o,t.findNodes(r.root,r),r.root.innerHTML=riot.util.tmpl(r.root.innerHTML,e)}.bind(this)});