riot.tag("tree",'<div class="tree-item-wrap" each="{ data }" onselectstart="return false" ondragstart="return false"> <input type="checkbox" onchange="{ parent.checkHandle }" if="{ parent.rootConfig.showCheck }"> <i class="{ tree-item-arrow: true, open: opened, empty: !children }" onclick="{ parent.toggle }"></i> <div onclick="{ parent.leftClick }" style="display: inline;"> <i class="tree-item-icon" if="{ !parent.children }"></i> <i class="tree-item-icon" if="{ parent.children }"></i> <div class="{ tree-item-name : true }" title="{ name }">{ name }</div>  </div> <ul class="tree-child-wrap" if="{ children }"> <tree data="{ children }" if="{ children }"></tree> </ul> </div>',function(e){var t=this;if(t.config=t.opts.opts||t.opts,t.dataHandle=function(e,i,n){var e=e||[],a=i||"id",o=n||"pid",r={};e.forEach(function(e){t.config.name&&(e.name=e[t.config.name]),r[e[a]]=e});var c=[];return e.forEach(function(e){var t=r[e[o]];t?(t.children||(t.children=[]),t.children.push(e)):c.push(e)}),c},t.config.handleData){var i=t.dataHandle(t.config.data);t.data=i}else t.data=t.config.data;t.rootConfig=t.config.root?t.config:t.parent.rootConfig||t.parent.parent.rootConfig,this.leftClick=function(e){if(t.rootConfig.folder&&e.item.children)e.item.opened=e.item.opened===!0?!1:!0;else{var i=t.rootConfig.onLeftClick;i&&i(e.item,e.target)}}.bind(this),this.checkHandle=function(e){var i=t.rootConfig.onCheck,n=t.rootConfig.onUnCheck;i&&e.target.checked&&i(e.item,e.target),n&&!e.target.checked&&n(e.item,e.target)}.bind(this),this.toggle=function(e){e.item.opened=e.item.opened===!0?!1:!0}.bind(this)});